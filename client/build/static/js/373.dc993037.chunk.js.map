{"version":3,"file":"static/js/373.dc993037.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/ArrowBack.js","../node_modules/@mui/icons-material/esm/Delete.js","components/ViewEmail.jsx","constants/constant.js","services/api.js","hooks/useApi.jsx","services/api.urls.js"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 11H7.83l5.59-5.59L12 4l-8 8 8 8 1.41-1.41L7.83 13H20v-2z\"\n}), 'ArrowBack');","\"use client\";\n\nimport createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');","\n\nimport { useOutletContext, useLocation } from \"react-router-dom\";\nimport { Box, Typography, styled } from '@mui/material';\nimport { ArrowBack, Delete } from \"@mui/icons-material\";\nimport { emptyProfilePic } from \"../constants/constant\";\nimport useApi from \"../hooks/useApi\";\nimport { API_URLS } from \"../services/api.urls\";\n\nconst IconWrapper = styled(Box)({\n    padding: 15\n})\n\nconst Subject = styled(Typography)({\n    fontSize: 22,\n    margin: '10px 0 20px 75px',\n    display: 'flex'\n})\n\nconst Indicator = styled(Box)({\n    fontSize: 12,\n    background: '#ddd',\n    color: '#222',\n    padding: '2px 4px',\n    marginLeft: 6,\n    marginRadius: 4,\n    alignSelf: 'center'\n})\n\nconst Container = styled(Box)({\n    marginLeft: 15,\n    width: '100%',\n    '& > div': {\n        display: 'flex',\n        '& > p > span' : {\n            fontSize: 12,\n            color: '#5E5E5E'\n        }\n    }\n   \n})\n\n\nconst Date = styled(Box)({\n    margin: '0 50px 0 auto !important',\n    fontSize: 12,\n    color: '#5E5E5E'\n})\n\nconst Image = styled('img')({\n   borderRadius: '50%',\n   width: 40,\n   height: 40,\n   margin: '5px 10px 0 10px',\n   background: '#cccccc'\n})\n\n\nconst ViewEmail = () => {\n    \n    const { openDrawer } = useOutletContext();\n\n    const { state } = useLocation();\n    const { email } = state;\n\n    const moveEmailsToBinService = useApi(API_URLS.moveEmailsToBin);\n\n    const deleteEmail = () => {\n        moveEmailsToBinService.call([email._id]);\n        window.history.back();\n    }\n\n    return (\n        <Box style={ openDrawer ? { marginLeft: 250 } : { width: '100%' }}>\n          <IconWrapper>\n             <ArrowBack onClick={() => window.history.back()} color=\"action\" fontSize=\"small\" />\n             <Delete fontSize=\"small\" color=\"action\" style={{ marginLeft: 40 }} onClick={() => deleteEmail()} />\n          </IconWrapper>\n          <Subject>\n              {email.subject}  <Indicator component=\"span\">Inbox</Indicator>\n          </Subject>\n          <Box style={{ display: 'flex' }}>\n              <Image src={emptyProfilePic} alt=\"dp\" />    \n              <Container>\n                 <Box>\n                    <Typography style={{ marginTop: 10 }} >{email.name}\n                     <Box component=\"span\">&nbsp;&#60;{email.to}&#62;</Box>\n                    </Typography>\n                    <Date>\n                       {(new window.Date(email.date)).getDate()}&nbsp;\n                       {(new window.Date(email.date)).toLocaleString('default', { month: 'long' })}&nbsp;\n                       {(new window.Date(email.date)).getFullYear()}\n\n                    </Date>\n                 </Box>\n                 <Typography style={{ marginTop: 15 }}>{email.body}</Typography>\n              </Container>\n          </Box>\n        </Box>\n    )\n}\n\nexport default ViewEmail;","export const gmailLogo = 'https://ssl.gstatic.com/ui/v1/icons/mail/rfr/logo_gmail_lockup_default_1x_r5.png';\nexport const emptyProfilePic = 'https://ssl.gstatic.com/ui/v1/icons/mail/profile_mask2.png';\n\nexport const EMPTY_TABS = {\n    inbox: {\n        heading: 'Your inbox is empty',\n        subHeading: \"Mails that don't appear in other tabs will be shown here.\"\n    },\n    drafts: {\n        heading: \"You don't have any saved drafts.\",\n        subHeading: \"Saving a draft allows you to keep a message you aren't ready to send yet.\"\n    },\n    starred: {\n        heading: 'No starred messages',\n        subHeading: \"Stars let you give messages a special status to make them easier to find. To star a message, click on the star outline beside any message or conversation.\"\n    },\n    sent: {\n        heading: 'No sent messages!',\n        subHeading: 'Send one now!'\n    },\n    bin: {\n        heading: 'No conversations in Bin.',\n        subHeading: ''\n    }\n}","import axios from 'axios';\n\nconst API_URL = '';\n//\n\nconst API_GMAIL = async (urlObject, payload, type) => {\n    return await axios({\n         method: urlObject.method,\n         url: `${API_URL}/${urlObject.endpoint}/${type}`,\n         data: payload\n\n    })\n}\n\nexport default API_GMAIL;","import { useState } from 'react';\nimport API from '../services/api';\n\nconst useApi = (urlObject) => {\n    const [response, setResponse] = useState(null);\n    const [error, setError] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n\n\n    const call = async (payload, type = '') => {\n        setResponse(null);\n        setError(\"\");\n        setIsLoading(true);\n\n        try{\n            let res = await API(urlObject, payload, type);\n            setResponse(res.data);\n        } catch(error) {\n            setError(error.message);\n        } finally {\n            setIsLoading(false);\n        }\n\n    }\n\n    return { call, response, error, isLoading };\n}\n\nexport default useApi;","export const API_URLS = {\n    saveSentEmail: {\n        endpoint: 'save',\n        method: 'POST'\n    },\n    getEmailFromType: {\n        endpoint: 'emails',\n        method: 'GET'\n    },\n    saveDraftEmails: {\n        endpoint: 'save-draft',\n        method: 'POST'\n    },\n    moveEmailsToBin: {\n        endpoint: 'bin',\n        method: 'POST'\n    },\n    toggleStarredEmail: {\n        endpoint: 'starred',\n        method: 'POST'\n    },\n    deleteEmail: {\n        endpoint: 'delete',\n        method: 'DELETE'\n    }\n}"],"names":["createSvgIcon","_jsx","d","IconWrapper","styled","Box","padding","Subject","Typography","fontSize","margin","display","Indicator","background","color","marginLeft","marginRadius","alignSelf","Container","width","Date","Image","borderRadius","height","openDrawer","useOutletContext","email","useLocation","state","moveEmailsToBinService","useApi","API_URLS","moveEmailsToBin","_jsxs","style","children","ArrowBack","onClick","window","history","back","Delete","call","_id","subject","component","src","emptyProfilePic","alt","marginTop","name","to","date","getDate","toLocaleString","month","getFullYear","body","gmailLogo","EMPTY_TABS","inbox","heading","subHeading","drafts","starred","sent","bin","API_GMAIL","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","urlObject","payload","type","wrap","_context","prev","next","axios","method","url","concat","endpoint","data","abrupt","stop","_x","_x2","_x3","apply","arguments","_useState","useState","_useState2","_slicedToArray","response","setResponse","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","res","_args","length","undefined","API","t0","message","finish","saveSentEmail","getEmailFromType","saveDraftEmails","toggleStarredEmail","deleteEmail"],"sourceRoot":""}